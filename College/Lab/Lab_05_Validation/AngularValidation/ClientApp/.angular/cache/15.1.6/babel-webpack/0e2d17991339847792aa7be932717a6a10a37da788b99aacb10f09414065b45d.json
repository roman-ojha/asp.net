{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nlet HomeComponent = class HomeComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.accountService.login(this.f.username.value, this.f.password.value).pipe(first()).subscribe({\n      next: () => {\n        // get return url from query parameters or default to home page\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n        this.router.navigateByUrl(returnUrl);\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.loading = false;\n      }\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  templateUrl: 'login.component.html'\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,KAAK,QAAQ,gBAAgB;AAK/B,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc,EACdC,cAA8B,EAC9BC,YAA0B;IAJ1B,gBAAW,GAAXJ,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IACd,iBAAY,GAAZC,YAAY;IARtB,YAAO,GAAG,KAAK;IACf,cAAS,GAAG,KAAK;EAQb;EAEJC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACjCC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACa,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACa,QAAQ;KACnC,CAAC;EACJ;EAEA;EACA,IAAIE,CAAC;IAAK,OAAO,IAAI,CAACL,IAAI,CAACM,QAAQ;EAAE;EAErCC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB;IACA,IAAI,CAACV,YAAY,CAACW,KAAK,EAAE;IAEzB;IACA,IAAI,IAAI,CAACT,IAAI,CAACU,OAAO,EAAE;MACrB;;IAGF,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACd,cAAc,CAACe,KAAK,CAAC,IAAI,CAACP,CAAC,CAACH,QAAQ,CAACW,KAAK,EAAE,IAAI,CAACR,CAAC,CAACD,QAAQ,CAACS,KAAK,CAAC,CACpEC,IAAI,CAACvB,KAAK,EAAE,CAAC,CACbwB,SAAS,CAAC;MACTC,IAAI,EAAE,MAAK;QACT;QACA,MAAMC,SAAS,GAAG,IAAI,CAACtB,KAAK,CAACuB,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG;QACrE,IAAI,CAACvB,MAAM,CAACwB,aAAa,CAACH,SAAS,CAAC;MACtC,CAAC;MACDI,KAAK,EAAEA,KAAK,IAAG;QACb,IAAI,CAACvB,YAAY,CAACuB,KAAK,CAACA,KAAK,CAAC;QAC9B,IAAI,CAACV,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACN;CACD;AAjDYnB,aAAa,eADzBH,SAAS,CAAC;EAAEiC,WAAW,EAAE;AAAsB,CAAE,CAAC,GACtC9B,aAAa,CAiDzB;SAjDYA,aAAa","names":["Component","Validators","first","HomeComponent","constructor","formBuilder","route","router","accountService","alertService","ngOnInit","form","group","username","required","password","f","controls","onSubmit","submitted","clear","invalid","loading","login","value","pipe","subscribe","next","returnUrl","snapshot","queryParams","navigateByUrl","error","templateUrl"],"sourceRoot":"","sources":["D:\\Programming\\Csharp\\Asp.Net\\College\\Lab\\Lab_05_Validation\\AngularValidation\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class HomeComponent implements OnInit {\r\n  form!: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService,\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.accountService.login(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          // get return url from query parameters or default to home page\r\n          const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n          this.router.navigateByUrl(returnUrl);\r\n        },\r\n        error: error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}